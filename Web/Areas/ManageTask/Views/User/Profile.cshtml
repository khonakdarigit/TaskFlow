@model Web.Areas.ManageTask.Models.UserProfileViewModel
@inject Application.Interface.IUser _user;
@{
    ViewData["Title"] = $"{_user.AppUser.FullName} Profile";
}
<div class="d-flex flex-column align-items-center">
    <h1>@_user.AppUser.FullName Profile</h1>

    <div>
        <img id="currentImage" src="@_user.AppUser.ProfilePictureUrl" alt="Current Image" class="img-thumbnail rounded-circle" style="width: 300px; height: 300px; object-fit: cover;" />
    </div>
    <button type="button" id="changeImageButton" class="btn btn-secondary mt-2">Change picture</button>
</div>
<div class="modal" id="changePicModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form id="profileForm" method="post" enctype="multipart/form-data">

                <div class="modal-header">
                    <h5 class="modal-title">Change Picture</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group" id="imageUploadSection">
                        <input type="file" style="display:none" id="profilePicture" name="profilePicture" accept="image/*" class="form-control" />
                        <div class="mt-2">
                            <img id="imagePreview" src="#" alt="تصویر جدید" style="max-width: 100%; display: none;" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" id="croppedImage" name="croppedImage" />

                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div>
    <h4>@_user.Email</h4>
    <hr />
    <div class="card">
        <div class="card-body">
            <form asp-action="Profile">
                <div class="form-group row">
                    <label asp-for="FirstName" class="col-sm-2 col-form-label"></label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" asp-for="FirstName" value="@Model.FirstName" placeholder="First Name">
                    </div>
                </div>

                <div class="form-group row">
                    <label asp-for="LastName" class="col-sm-2 col-form-label"></label>
                    <div class="col-sm-10">
                        <input  type="text" class="form-control" asp-for="LastName" value="@Model.LastName" placeholder="Last Name">
                    </div>
                </div>

                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                    <button  class="btn btn-primary" type="submit">Save</button>
                </div>
             
            </form>
            <p>
                <partial name="_StatusMessage" model="@Model.StatusMessage" />
            </p>
        </div>
    </div>

</div>



@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />

    <script>
        document.getElementById('changeImageButton').addEventListener('click', function () {
            const fileInput = document.getElementById('profilePicture');
            fileInput.click();
        });

        // تعریف متغیر در سطح بالاتر برای نگهداری نمونه Cropper
        let cropperInstance = null;

        document.getElementById('profilePicture').addEventListener('change', function (e) {
            // بستن Cropper قبلی اگر وجود دارد
            if (cropperInstance) {
                cropperInstance.destroy();
                cropperInstance = null;
            }

            var myModal = new bootstrap.Modal(document.getElementById('changePicModal'));
            myModal.show();

            var reader = new FileReader();
            reader.onload = function (e) {
                var imagePreview = document.getElementById('imagePreview');
                imagePreview.style.display = 'block';
                imagePreview.src = e.target.result;

                // ایجاد Cropper جدید
                cropperInstance = new Cropper(imagePreview, {
                    aspectRatio: 1,
                    viewMode: 1,
                    autoCropArea: 1,
                    crop: function (event) {
                        var canvas = cropperInstance.getCroppedCanvas({
                            width: 300,
                            height: 300
                        });
                        document.getElementById('croppedImage').value = canvas.toDataURL('image/jpeg', 0.9);
                    }
                });
            };
            reader.readAsDataURL(e.target.files[0]);
        });

        // مدیریت بستن مودال
        document.getElementById('changePicModal').addEventListener('hidden.bs.modal', function () {
            if (cropperInstance) {
                cropperInstance.destroy();
                cropperInstance = null;
            }
        });

        document.getElementById('profileForm').addEventListener('submit', function (e) {
            e.preventDefault();

            var formData = new FormData(this);
            fetch('/ManageTask/User/UploadProfilePicture', {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.reload();
                    } else {
                        alert('exeption in update ...');
                    }
                });
        });
    </script>
}
